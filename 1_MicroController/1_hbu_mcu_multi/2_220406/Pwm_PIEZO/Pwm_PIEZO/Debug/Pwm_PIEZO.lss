
Pwm_PIEZO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000294  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000240  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000294  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002c4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  00000300  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000910  00000000  00000000  00000348  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000819  00000000  00000000  00000c58  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000380  00000000  00000000  00001471  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000088  00000000  00000000  000017f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000413  00000000  00000000  0000187c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000231  00000000  00000000  00001c8f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00001ec0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	7a d0       	rcall	.+244    	; 0x18e <main>
  9a:	d0 c0       	rjmp	.+416    	; 0x23c <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <Change_FREQ>:
	return 0;
	
}


void Change_FREQ(unsigned int freq){
  9e:	0f 93       	push	r16
  a0:	1f 93       	push	r17
  a2:	cf 93       	push	r28
  a4:	df 93       	push	r29
  a6:	8c 01       	movw	r16, r24
	
	unsigned int x;
	TCCR3A |= 0x40;
  a8:	eb e8       	ldi	r30, 0x8B	; 139
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	80 81       	ld	r24, Z
  ae:	80 64       	ori	r24, 0x40	; 64
  b0:	80 83       	st	Z, r24
	TCCR3B |= 0x19;
  b2:	ea e8       	ldi	r30, 0x8A	; 138
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	80 81       	ld	r24, Z
  b8:	89 61       	ori	r24, 0x19	; 25
  ba:	80 83       	st	Z, r24
	
	do{
		x = TCNT3;
  bc:	c0 91 88 00 	lds	r28, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  c0:	d0 91 89 00 	lds	r29, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
		
	}while(x>= FREQ(freq));
  c4:	98 01       	movw	r18, r16
  c6:	22 0f       	add	r18, r18
  c8:	33 1f       	adc	r19, r19
  ca:	40 e0       	ldi	r20, 0x00	; 0
  cc:	50 e0       	ldi	r21, 0x00	; 0
  ce:	60 e0       	ldi	r22, 0x00	; 0
  d0:	70 e8       	ldi	r23, 0x80	; 128
  d2:	80 e7       	ldi	r24, 0x70	; 112
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	74 d0       	rcall	.+232    	; 0x1c0 <__divmodsi4>
  d8:	c2 17       	cp	r28, r18
  da:	d3 07       	cpc	r29, r19
  dc:	78 f7       	brcc	.-34     	; 0xbc <Change_FREQ+0x1e>
	
	ICR3 = FREQ(freq);
  de:	30 93 81 00 	sts	0x0081, r19	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  e2:	20 93 80 00 	sts	0x0080, r18	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	
}
  e6:	df 91       	pop	r29
  e8:	cf 91       	pop	r28
  ea:	1f 91       	pop	r17
  ec:	0f 91       	pop	r16
  ee:	08 95       	ret

000000f0 <STOP_FREQ>:

void STOP_FREQ(){
	
	TCCR3A = 0x00;
  f0:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
	TCCR3B = 0x00;
  f4:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	TCNT3 = 0;
  f8:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  fc:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	ICR3 = FREQ(0);
 100:	60 e0       	ldi	r22, 0x00	; 0
 102:	70 e8       	ldi	r23, 0x80	; 128
 104:	80 e7       	ldi	r24, 0x70	; 112
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	20 e0       	ldi	r18, 0x00	; 0
 10a:	30 e0       	ldi	r19, 0x00	; 0
 10c:	a9 01       	movw	r20, r18
 10e:	58 d0       	rcall	.+176    	; 0x1c0 <__divmodsi4>
 110:	30 93 81 00 	sts	0x0081, r19	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 114:	20 93 80 00 	sts	0x0080, r18	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	PORTE = 0xFF;
 118:	8f ef       	ldi	r24, 0xFF	; 255
 11a:	83 b9       	out	0x03, r24	; 3
 11c:	08 95       	ret

0000011e <Pop_Button>:
	
}

void Pop_Button(){
	while((PIND & 0xFF)!= 0x00);
 11e:	80 b3       	in	r24, 0x10	; 16
 120:	81 11       	cpse	r24, r1
 122:	fd cf       	rjmp	.-6      	; 0x11e <Pop_Button>
}
 124:	08 95       	ret

00000126 <Push_Button>:

unsigned char Push_Button(){
	
	while((PIND & 0xFF) == 0x00);
 126:	80 b3       	in	r24, 0x10	; 16
 128:	88 23       	and	r24, r24
 12a:	e9 f3       	breq	.-6      	; 0x126 <Push_Button>
	return PIND;
 12c:	80 b3       	in	r24, 0x10	; 16
	
}
 12e:	08 95       	ret

00000130 <key2DoReMi>:

unsigned int key2DoReMi(unsigned char key){
	
	unsigned int _ret = 0;
	
	switch(key){
 130:	88 30       	cpi	r24, 0x08	; 8
 132:	d9 f0       	breq	.+54     	; 0x16a <key2DoReMi+0x3a>
 134:	38 f4       	brcc	.+14     	; 0x144 <key2DoReMi+0x14>
 136:	82 30       	cpi	r24, 0x02	; 2
 138:	91 f0       	breq	.+36     	; 0x15e <key2DoReMi+0x2e>
 13a:	84 30       	cpi	r24, 0x04	; 4
 13c:	99 f0       	breq	.+38     	; 0x164 <key2DoReMi+0x34>
 13e:	81 30       	cpi	r24, 0x01	; 1
 140:	59 f4       	brne	.+22     	; 0x158 <key2DoReMi+0x28>
 142:	22 c0       	rjmp	.+68     	; 0x188 <key2DoReMi+0x58>
 144:	80 32       	cpi	r24, 0x20	; 32
 146:	b9 f0       	breq	.+46     	; 0x176 <key2DoReMi+0x46>
 148:	18 f4       	brcc	.+6      	; 0x150 <key2DoReMi+0x20>
 14a:	80 31       	cpi	r24, 0x10	; 16
 14c:	89 f0       	breq	.+34     	; 0x170 <key2DoReMi+0x40>
 14e:	04 c0       	rjmp	.+8      	; 0x158 <key2DoReMi+0x28>
 150:	80 34       	cpi	r24, 0x40	; 64
 152:	a1 f0       	breq	.+40     	; 0x17c <key2DoReMi+0x4c>
 154:	80 38       	cpi	r24, 0x80	; 128
 156:	a9 f0       	breq	.+42     	; 0x182 <key2DoReMi+0x52>
	
}

unsigned int key2DoReMi(unsigned char key){
	
	unsigned int _ret = 0;
 158:	80 e0       	ldi	r24, 0x00	; 0
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	08 95       	ret
		case 0x01:
			_ret = 523;
			break;
			
		case 0x02:
			_ret = 587;
 15e:	8b e4       	ldi	r24, 0x4B	; 75
 160:	92 e0       	ldi	r25, 0x02	; 2
			break;
 162:	08 95       	ret
		
		case 0x04:
			_ret = 659;
 164:	83 e9       	ldi	r24, 0x93	; 147
 166:	92 e0       	ldi	r25, 0x02	; 2
			break;
 168:	08 95       	ret
			
		case 0x08:
			_ret = 698;
 16a:	8a eb       	ldi	r24, 0xBA	; 186
 16c:	92 e0       	ldi	r25, 0x02	; 2
			break;
 16e:	08 95       	ret
			
		case 0x10:
			_ret = 783;
 170:	8f e0       	ldi	r24, 0x0F	; 15
 172:	93 e0       	ldi	r25, 0x03	; 3
			break;
 174:	08 95       	ret
		
		case 0x20:
			_ret = 880;
 176:	80 e7       	ldi	r24, 0x70	; 112
 178:	93 e0       	ldi	r25, 0x03	; 3
			break;
 17a:	08 95       	ret
			
		case 0x40:
			_ret = 987;
 17c:	8b ed       	ldi	r24, 0xDB	; 219
 17e:	93 e0       	ldi	r25, 0x03	; 3
			break;
 180:	08 95       	ret
			
		case 0x80:
			_ret = 1046;
 182:	86 e1       	ldi	r24, 0x16	; 22
 184:	94 e0       	ldi	r25, 0x04	; 4
			break;
 186:	08 95       	ret
	unsigned int _ret = 0;
	
	switch(key){
		
		case 0x01:
			_ret = 523;
 188:	8b e0       	ldi	r24, 0x0B	; 11
 18a:	92 e0       	ldi	r25, 0x02	; 2
			break;
		
	}
	
	return _ret;
 18c:	08 95       	ret

0000018e <main>:


int main(void)
{
	unsigned char piano = 0;
	DDRE = 0x08;
 18e:	88 e0       	ldi	r24, 0x08	; 8
 190:	82 b9       	out	0x02, r24	; 2
	
	TCCR3A |= 0x40;
 192:	eb e8       	ldi	r30, 0x8B	; 139
 194:	f0 e0       	ldi	r31, 0x00	; 0
 196:	80 81       	ld	r24, Z
 198:	80 64       	ori	r24, 0x40	; 64
 19a:	80 83       	st	Z, r24
	TCCR3B |= 0x19;
 19c:	ea e8       	ldi	r30, 0x8A	; 138
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	80 81       	ld	r24, Z
 1a2:	89 61       	ori	r24, 0x19	; 25
 1a4:	80 83       	st	Z, r24
	
	TCCR3C = 0x00;
 1a6:	10 92 8c 00 	sts	0x008C, r1	; 0x80008c <__TEXT_REGION_LENGTH__+0x7e008c>
	TCNT3 = 0x0000;
 1aa:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1ae:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
	STOP_FREQ();
 1b2:	9e df       	rcall	.-196    	; 0xf0 <STOP_FREQ>
	
	while (1) 
    {
		piano = Push_Button();
 1b4:	b8 df       	rcall	.-144    	; 0x126 <Push_Button>
		Change_FREQ(key2DoReMi(piano));
 1b6:	bc df       	rcall	.-136    	; 0x130 <key2DoReMi>
 1b8:	72 df       	rcall	.-284    	; 0x9e <Change_FREQ>
		Pop_Button();
 1ba:	b1 df       	rcall	.-158    	; 0x11e <Pop_Button>
 1bc:	99 df       	rcall	.-206    	; 0xf0 <STOP_FREQ>
		STOP_FREQ();
 1be:	fa cf       	rjmp	.-12     	; 0x1b4 <main+0x26>

000001c0 <__divmodsi4>:
 1c0:	05 2e       	mov	r0, r21
 1c2:	97 fb       	bst	r25, 7
 1c4:	16 f4       	brtc	.+4      	; 0x1ca <__divmodsi4+0xa>
 1c6:	00 94       	com	r0
 1c8:	0f d0       	rcall	.+30     	; 0x1e8 <__negsi2>
 1ca:	57 fd       	sbrc	r21, 7
 1cc:	05 d0       	rcall	.+10     	; 0x1d8 <__divmodsi4_neg2>
 1ce:	14 d0       	rcall	.+40     	; 0x1f8 <__udivmodsi4>
 1d0:	07 fc       	sbrc	r0, 7
 1d2:	02 d0       	rcall	.+4      	; 0x1d8 <__divmodsi4_neg2>
 1d4:	46 f4       	brtc	.+16     	; 0x1e6 <__divmodsi4_exit>
 1d6:	08 c0       	rjmp	.+16     	; 0x1e8 <__negsi2>

000001d8 <__divmodsi4_neg2>:
 1d8:	50 95       	com	r21
 1da:	40 95       	com	r20
 1dc:	30 95       	com	r19
 1de:	21 95       	neg	r18
 1e0:	3f 4f       	sbci	r19, 0xFF	; 255
 1e2:	4f 4f       	sbci	r20, 0xFF	; 255
 1e4:	5f 4f       	sbci	r21, 0xFF	; 255

000001e6 <__divmodsi4_exit>:
 1e6:	08 95       	ret

000001e8 <__negsi2>:
 1e8:	90 95       	com	r25
 1ea:	80 95       	com	r24
 1ec:	70 95       	com	r23
 1ee:	61 95       	neg	r22
 1f0:	7f 4f       	sbci	r23, 0xFF	; 255
 1f2:	8f 4f       	sbci	r24, 0xFF	; 255
 1f4:	9f 4f       	sbci	r25, 0xFF	; 255
 1f6:	08 95       	ret

000001f8 <__udivmodsi4>:
 1f8:	a1 e2       	ldi	r26, 0x21	; 33
 1fa:	1a 2e       	mov	r1, r26
 1fc:	aa 1b       	sub	r26, r26
 1fe:	bb 1b       	sub	r27, r27
 200:	fd 01       	movw	r30, r26
 202:	0d c0       	rjmp	.+26     	; 0x21e <__udivmodsi4_ep>

00000204 <__udivmodsi4_loop>:
 204:	aa 1f       	adc	r26, r26
 206:	bb 1f       	adc	r27, r27
 208:	ee 1f       	adc	r30, r30
 20a:	ff 1f       	adc	r31, r31
 20c:	a2 17       	cp	r26, r18
 20e:	b3 07       	cpc	r27, r19
 210:	e4 07       	cpc	r30, r20
 212:	f5 07       	cpc	r31, r21
 214:	20 f0       	brcs	.+8      	; 0x21e <__udivmodsi4_ep>
 216:	a2 1b       	sub	r26, r18
 218:	b3 0b       	sbc	r27, r19
 21a:	e4 0b       	sbc	r30, r20
 21c:	f5 0b       	sbc	r31, r21

0000021e <__udivmodsi4_ep>:
 21e:	66 1f       	adc	r22, r22
 220:	77 1f       	adc	r23, r23
 222:	88 1f       	adc	r24, r24
 224:	99 1f       	adc	r25, r25
 226:	1a 94       	dec	r1
 228:	69 f7       	brne	.-38     	; 0x204 <__udivmodsi4_loop>
 22a:	60 95       	com	r22
 22c:	70 95       	com	r23
 22e:	80 95       	com	r24
 230:	90 95       	com	r25
 232:	9b 01       	movw	r18, r22
 234:	ac 01       	movw	r20, r24
 236:	bd 01       	movw	r22, r26
 238:	cf 01       	movw	r24, r30
 23a:	08 95       	ret

0000023c <_exit>:
 23c:	f8 94       	cli

0000023e <__stop_program>:
 23e:	ff cf       	rjmp	.-2      	; 0x23e <__stop_program>
