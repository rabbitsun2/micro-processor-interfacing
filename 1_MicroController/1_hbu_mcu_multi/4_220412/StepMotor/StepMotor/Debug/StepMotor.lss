
StepMotor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000001dc  00000270  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001dc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  0080010a  0080010a  0000027a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000027a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002ac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  000002e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008b7  00000000  00000000  00000318  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007ba  00000000  00000000  00000bcf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002ec  00000000  00000000  00001389  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000078  00000000  00000000  00001678  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000408  00000000  00000000  000016f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000ac  00000000  00000000  00001af8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001ba4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	77 c0       	rjmp	.+238    	; 0xf4 <__vector_1>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	79 c0       	rjmp	.+242    	; 0x134 <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec ed       	ldi	r30, 0xDC	; 220
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 30       	cpi	r26, 0x0A	; 10
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e0       	ldi	r26, 0x0A	; 10
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ad 30       	cpi	r26, 0x0D	; 13
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	02 d0       	rcall	.+4      	; 0xc8 <main>
  c4:	89 c0       	rjmp	.+274    	; 0x1d8 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <main>:
ISR(TIMER0_OVF_vect);

int main(void)
{

	S_MOTOR_DDR |= S_MOTOR_PORT;
  c8:	84 b3       	in	r24, 0x14	; 20
  ca:	8f 60       	ori	r24, 0x0F	; 15
  cc:	84 bb       	out	0x14, r24	; 20
	
	EICRA = 0x02;
  ce:	82 e0       	ldi	r24, 0x02	; 2
  d0:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
	EICRB = 0x00;
  d4:	1a be       	out	0x3a, r1	; 58
	EIMSK = 0x01;
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	89 bf       	out	0x39, r24	; 57
	
	EIFR = 0x01;
  da:	88 bf       	out	0x38, r24	; 56
	
	TCCR0 = 0x07;
  dc:	87 e0       	ldi	r24, 0x07	; 7
  de:	83 bf       	out	0x33, r24	; 51
	
	TCNT0 = 0xff - 160;
  e0:	8f e5       	ldi	r24, 0x5F	; 95
  e2:	82 bf       	out	0x32, r24	; 50
	TIMSK |= 1 << TOIE0;
  e4:	87 b7       	in	r24, 0x37	; 55
  e6:	81 60       	ori	r24, 0x01	; 1
  e8:	87 bf       	out	0x37, r24	; 55
	
	TIFR |= 1 << TOV0;
  ea:	86 b7       	in	r24, 0x36	; 54
  ec:	81 60       	ori	r24, 0x01	; 1
  ee:	86 bf       	out	0x36, r24	; 54
	sei();
  f0:	78 94       	sei
  f2:	ff cf       	rjmp	.-2      	; 0xf2 <main+0x2a>

000000f4 <__vector_1>:
    while (1);
	
	return 0;
}

ISR(INT0_vect){
  f4:	1f 92       	push	r1
  f6:	0f 92       	push	r0
  f8:	0f b6       	in	r0, 0x3f	; 63
  fa:	0f 92       	push	r0
  fc:	11 24       	eor	r1, r1
  fe:	8f 93       	push	r24
 100:	9f 93       	push	r25
	
	cli();
 102:	f8 94       	cli
	
	flag = ON;
 104:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <flag>
	if(ecd_cnt == DIR_CHANHE_CNT){
 108:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <ecd_cnt>
 10c:	82 30       	cpi	r24, 0x02	; 2
 10e:	51 f4       	brne	.+20     	; 0x124 <__vector_1+0x30>
		dir = (dir == DIR_R ? DIR_L : DIR_R);
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <dir>
 116:	91 30       	cpi	r25, 0x01	; 1
 118:	09 f4       	brne	.+2      	; 0x11c <__vector_1+0x28>
 11a:	80 e0       	ldi	r24, 0x00	; 0
 11c:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <dir>
		ecd_cnt = 0;
 120:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <ecd_cnt>
	}
	
	sei();
 124:	78 94       	sei
	
}
 126:	9f 91       	pop	r25
 128:	8f 91       	pop	r24
 12a:	0f 90       	pop	r0
 12c:	0f be       	out	0x3f, r0	; 63
 12e:	0f 90       	pop	r0
 130:	1f 90       	pop	r1
 132:	18 95       	reti

00000134 <__vector_16>:

ISR(TIMER0_OVF_vect){
 134:	1f 92       	push	r1
 136:	0f 92       	push	r0
 138:	0f b6       	in	r0, 0x3f	; 63
 13a:	0f 92       	push	r0
 13c:	11 24       	eor	r1, r1
 13e:	0b b6       	in	r0, 0x3b	; 59
 140:	0f 92       	push	r0
 142:	8f 93       	push	r24
 144:	9f 93       	push	r25
 146:	ef 93       	push	r30
 148:	ff 93       	push	r31
	
	cli();
 14a:	f8 94       	cli
	TCNT0 = 0xff - 160;
 14c:	8f e5       	ldi	r24, 0x5F	; 95
 14e:	82 bf       	out	0x32, r24	; 50
	
	if(flag == ON){
 150:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <flag>
 154:	81 11       	cpse	r24, r1
 156:	05 c0       	rjmp	.+10     	; 0x162 <__vector_16+0x2e>
		flag_cnt++;
 158:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 15c:	8f 5f       	subi	r24, 0xFF	; 255
 15e:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
	}
	
	if(flag_cnt == 10){
 162:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 166:	8a 30       	cpi	r24, 0x0A	; 10
 168:	51 f4       	brne	.+20     	; 0x17e <__vector_16+0x4a>
		flag = OFF;
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <flag>
		flag_cnt = 0;
 170:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__data_end>
		ecd_cnt++;
 174:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <ecd_cnt>
 178:	8f 5f       	subi	r24, 0xFF	; 255
 17a:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <ecd_cnt>
	}
	
	S_MOTOR_DATA_OUT = mot_tbl[mot_cnt];
 17e:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <mot_cnt>
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	e0 50       	subi	r30, 0x00	; 0
 186:	ff 4f       	sbci	r31, 0xFF	; 255
 188:	80 81       	ld	r24, Z
 18a:	85 bb       	out	0x15, r24	; 21
	
	if(dir == DIR_R){
 18c:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <dir>
 190:	81 30       	cpi	r24, 0x01	; 1
 192:	59 f4       	brne	.+22     	; 0x1aa <__vector_16+0x76>
		if( mot_cnt++ == 7 ){
 194:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <mot_cnt>
 198:	91 e0       	ldi	r25, 0x01	; 1
 19a:	98 0f       	add	r25, r24
 19c:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <mot_cnt>
 1a0:	87 30       	cpi	r24, 0x07	; 7
 1a2:	79 f4       	brne	.+30     	; 0x1c2 <__vector_16+0x8e>
			mot_cnt = 0;
 1a4:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <mot_cnt>
 1a8:	0c c0       	rjmp	.+24     	; 0x1c2 <__vector_16+0x8e>
		}
	}
	else{
		
		if(mot_cnt-- == 0){
 1aa:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <mot_cnt>
 1ae:	9f ef       	ldi	r25, 0xFF	; 255
 1b0:	98 0f       	add	r25, r24
 1b2:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <mot_cnt>
 1b6:	81 11       	cpse	r24, r1
 1b8:	03 c0       	rjmp	.+6      	; 0x1c0 <__vector_16+0x8c>
			mot_cnt = 7;
 1ba:	87 e0       	ldi	r24, 0x07	; 7
 1bc:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <mot_cnt>
		}
		
		sei();
 1c0:	78 94       	sei
	}
	
 1c2:	ff 91       	pop	r31
 1c4:	ef 91       	pop	r30
 1c6:	9f 91       	pop	r25
 1c8:	8f 91       	pop	r24
 1ca:	0f 90       	pop	r0
 1cc:	0b be       	out	0x3b, r0	; 59
 1ce:	0f 90       	pop	r0
 1d0:	0f be       	out	0x3f, r0	; 63
 1d2:	0f 90       	pop	r0
 1d4:	1f 90       	pop	r1
 1d6:	18 95       	reti

000001d8 <_exit>:
 1d8:	f8 94       	cli

000001da <__stop_program>:
 1da:	ff cf       	rjmp	.-2      	; 0x1da <__stop_program>
